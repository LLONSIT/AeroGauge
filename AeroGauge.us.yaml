name: Aerogauge (North America)
sha1: 77626171c35fb1a4dfebb0927280897f362225ed
options:
  basename: AeroGauge
  target_path: baserom.us.z64
  base_path: .
  compiler: IDO
  find_file_boundaries: True
  header_encoding: ASCII
  platform: n64
  symbol_addrs_path: symbol_addrs.txt
  compression: lzma
  migrate_rodata_to_functions: yes
  generate_c_preamble: #include <ultra64.h>
  lib_path: build/lib

segments:
  - name: header
    type: header
    start: 0x0
  - name: boot
    type: bin
    start: 0x40
  - name: main
    type: code
    start: 0x1000
    vram: 0x80000400
    subsegments:
      - [0x1000, hasm, entrypoint]
      - [0x11C0, asm]
      - [0x1FC0, asm]
      - [0x2360, asm]
      - [0x2D80, asm]
      - [0x5850, asm] 
      - [0x6BE0, asm]
      - [0x6C90, c, game_6C90]
      - [0x6EA0, asm]
      - [0x9D50, asm]
      - [0xA160, c, game_A160] 
      - [0xA220, asm]
      - [0xA910, asm]
      - [0xDA40, c, game_DA40]
      - [0xE270, asm]
      - [0xEBD0, asm]
      - [0xEC90, asm]
      - [0x10520, asm]
      - [0x10640, asm]
      - [0x108F0, asm]
      - [0x10D60, c, game_10D60]
      - [0x12760, asm]
      - [0x14060, c, game_14060]
      - [0x14720, c, game_14720]
      - [0x15020, asm]
      - [0x15D60, c, game_15D60]
      - [0x16840, asm]
      - [0x16BD0, c, game_16BD0]
      - [0x198F0, asm]
      - [0x19A90, asm]
      - [0x19AA0, asm]
      - [0x1A230, c, game_1A230] #Related to GFX
      - [0x1CA50, c, game_1CA50]
      - [0x1CC30, c, game_1CC30]
      - [0x1EDC0, c, game_1EDC0]
      - [0x1F0E0, asm]
      - [0x1FD50, asm]
      - [0x202A0, c, game_202A0]
      - [0x20D90, asm]
      - [0x22680, asm]
      - [0x22EC0, asm]
      - [0x24530, asm]
      - [0x24890, c, game_24890]
      - [0x24B70, asm]
      - [0x24CC0, asm]
      - [0x24D00, asm]
      - [0x24DF0, c, game_24DF0]
      - [0x24E40, c, game_24E40]
      - [0x24EE0, asm]
      - [0x25440, asm]
      - [0x255D0, asm]
      - [0x25760, asm]
      - [0x25A60, asm]
      - [0x25BE0, asm]
      - [0x25D70, asm]
      - [0x25F20, c, game_25F20]
      - [0x25FC0, asm]
      - [0x26440, c, game_26440]
      - [0x26520, asm]
      - [0x265C0, asm]
      - [0x26610, asm]
      - [0x28470, asm]
      - [0x2E0B0, asm]
      - [0x2F1E0, asm]
      - [0x337B0, asm]
      - [0x37B40, asm]
      - [0x3AD90, asm]
      - [0x3C840, asm]
      - [0x3F900, c, game_3F900]
      - [0x43090, asm]
      - [0x470E0, asm]
      - [0x4B490, asm]
      - [0x4FA50, asm]
      - [0x53A60, asm]
      - [0x57E00, asm]
      - [0x58530, c, game_58530]
      - [0x58710, asm]
      - [0x5D0C0, asm]
      - [0x5D350, c, game_5D350]
      - [0x5F6B0, asm]
      - [0x61570, asm]
      - [0x62900, c, game_62900]
      - [0x63A60, asm]
      - [0x65610, asm]
      - [0x65FF0, asm]
      - [0x66230, asm]
      - [0x66340, asm] #End of the game code
      
      #Libultra Segment Starts!
      - [0x66700, asm, heapinit]
      - [0x66740, asm, heapalloc] #Heapinit to
      - [0x667A0, asm, bnkf]
      - [0x669F0, asm, seqpsetbank] #cspsetbank to
      - [0x66A30, asm, osCreateMesgQueue]
      - [0x66A60, hasm, invaldcache]
      - [0x66B10, asm, pidma]
      - [0x66C20, asm, seqpsetvol] #cspsetvol to
      - [0x66C60, asm, seqpstop] #cspstop to 
      - [0x66C90, asm, recvmesg]
      - [0x66DD0, asm, cseq]
      - [0x67890, asm, alSeqpSetSeq]
      - [0x678D0, asm, seqpplay]
      - [0x67900, asm, cents2ratio]
      - [0x67950, asm, sinf]
      - [0x68220, asm, sndpallocate]
      - [0x682C0, asm, sndpsetsound]
      - [0x682E0, asm, sndpsetvol]
      - [0x68340, c, os/audio/alSndpSetPan]
      - [0x683A0, c, os/audio/alSndpSetFXMix]
      - [0x68400, c, os/audio/alSndpSetPitch]
      - [0x68460, c, os/audio/alSndpStop]
      - [0x684B0, asm, sndpgetstate]
      - [0x68590, asm, aisetfreq]
      - [0x686F0, asm, sl]
      - [0x687B0, c, os/osCreateThread]
      - [0x68900, c, os/osStartThread]
      - [0x68A50, asm, seqpdelete]
      - [0x68A80, c, os/audio/alSndpDelete]
      - [0x68AB0, c, os/osVirtualToPhysical]
      - [0x68B30, asm, aisetnextbuf]
      - [0x68BE0, asm, os/osAiGetLenght]
      - [0x68BF0, asm, synthesizer]
      - [0x692D0, asm, sendmesg]
      - [0x69420, asm, seqplayer]
      - [0x6AD60, asm, event]
      - [0x6B170, asm, synfreevoice]
      - [0x6B220, asm, synsetvol]
      - [0x6B2C0, asm, alSynSetPitch]
      - [0x6B350, asm, alSynallocVoice]
      - [0x6B580, asm, alSynStartVoiceParam]
      - [0x6B670, asm, alSynSetFXMix]
      - [0x6B710, hasm, osSetintMask]
      - [0x6B7B0, asm, scale]
      - [0x6B850, asm, coss]
      - [0x6B880, asm, cosf]
      - [0x6B9F0, hasm, sqrtf]
      - [0x6BA00, asm, seteventmesg]
      - [0x6BA70, asm, contsetch]
      - [0x6BAE0, asm, controller]
      - [0x6BE20, asm, contreaddata]
      - [0x6C040, asm, pfsinitpak]
      - [0x6C2E0, asm, sins]
      - [0x6C350, asm, translate]
      - [0x6C3F0, asm, rotate]
      - [0x6C5E0, asm, sprintf]
      - [0x6C660, asm, perspective]
      - [0x6C8F0, asm, lookat]
      - [0x6CC20, asm, mtxcatf]
      - [0x6CE30, asm, mtxutil]
      - [0x6D0A0, hasm, bzero]
      - [0x6D140, asm, ll]
      - [0x6D400, asm, gettime]
      - [0x6D490, asm, llcvt]
      - [0x6D6A0, asm, visetspecial]
      - [0x6D860, asm, viblack]
      - [0x6D8D0, hasm, writebackdcacheall]
      - [0x6D900, c, os/libc/osSyncPrintf]
      - [0x6D940, c, os/libc/String]
      - [0x6D9E0, asm, pfssearchfile]
      - [0x6DBA0, asm, osPfsNumFiles]
      - [0x6DCF0, asm, pfsfreeblocks]
      - [0x6DE40, asm, normalize]
      - [0x6DED0, asm, pfsfilestate]
      - [0x6E1C0, asm, pfsrepairid]
      - [0x6E420, asm, pfsdeletefile]
      - [0x6EA40, asm, conteepprobe]
      - [0x6EAE0, asm, conteepread]
      - [0x6EE00, asm, conteeplongwrite]
      - [0x6EEF0, asm, conteeplongread]
      - [0x6EF80, asm, motor]
      - [0x6F720, asm, pfsreadwritefile]
      - [0x6FC40, asm, pfsallocatefile]
      - [0x703F0, asm] #TODO
      - [0x70750, asm, visetmode]
      - [0x707C0, asm, osViSetEvent]
      - [0x70830, asm, sptaskyielded]
      - [0x708B0, asm] #TODO
      - [0x70930, asm, jammesg]
      - [0x70A80, asm, viswapbuf]
      - [0x70AD0, asm, sptask]
      - [0x70DC0, asm, dpsetnextbuf]
      - [0x70E70, asm, sptaskyield]
      - [0x70E90, asm, initialize]
      - [0x71120, asm, setthreadpri]
      - [0x71200, asm, pimgr]
      - [0x71390, asm] #TODO
      - [0x713F0, asm, thread]
      - [0x71430, asm, pigetcmdq]
      - [0x71460, hasm, interrupt]
      - [0x714A0, hasm, exceptasm]
      - [0x71E40, asm, syndelete]
      - [0x71E50, asm, synremoveplayer]
      - [0x71EF0, hasm, probetlb]
      - [0x71FB0, asm, ai]
      - [0x71FE0, asm, drvrNew]
      - [0x72780, asm, synallocfx]
      - [0x72820, asm, mainbus]
      - [0x72970, asm, load]
      - [0x734C0, asm, resample]
      - [0x737C0, asm, env]
      - [0x74420, asm, auxbus]
      - [0x74530, asm, save]
      - [0x745F0, asm, seq]
      - [0x74C10, asm, synsetpriority]
      - [0x74C20, asm, copy] # ?
      - [0x74CA0, asm]  #TODO
      - [0x74D60, asm, settimer]
      - [0x74E40, asm, sirawdma]
      - [0x74EF0, asm, pfsgetstatus]
      - [0x75130, asm, contpfs]
      - [0x75E90, asm, contramread]
      - [0x761F0, asm, pfschecker]
      - [0x77910, asm, osGetCount]
      - [0x77920, asm, timerintr]
      - [0x77E60, asm, contramwrite]
      - [0x781C0, asm, conteepwrite]
      - [0x786E0, asm, pfsisplug]
      - [0x78A20, asm, crc]
      - [0x78BA0, asm, getthreadpri]
      - [0x78BC0, asm, getactivequeue]
      - [0x78BD0, asm] #TODO
      - [0x78F50, asm, spgetstat]
      - [0x78F60, hasm, bcopy]
      - [0x79270, hasm, writebackdcache]
      - [0x792F0, asm, spsetstat]
      - [0x79300, asm, spsetpc]
      - [0x79340, asm, sprawdma]
      - [0x793D0, asm, sp]
      - [0x79400, asm, osDpDeviceBusy]
      - [0x79430, hasm, setsr]
      - [0x79440, hasm, getsr]
      - [0x79450, hasm, setfpccsr]
      - [0x79460, asm, sprawread] #sirawread to
      - [0x794B0, asm, sprawwrite]
      - [0x79500, hasm, invalicache]
      - [0x79580, hasm, maptlbrdb]
      - [0x795E0, asm, pirawread]
      - [0x79640, asm, cartrominit]
      - [0x79740, asm, leodiskinit]
      - [0x79840, asm] #TODO
      - [0x79900, asm, pirawdma]
      - [0x799E0, asm, epirawdma]
      - [0x79C10, asm, devmgr]
      - [0x7A0A0, asm, leointerrupt]
      - [0x7A920, asm, destroythread]
      - [0x7AA30, asm, filter]
      - [0x7AA50, asm, reverb]
      - [0x7B6A0, asm, si]
      - [0x7B6D0, asm, xlitob]
      - [0x7B970, asm, xldtob]
      - [0x7C430, hasm, setcompare]
      - [0x7C440, asm, resetglobalintmask]
      - [0x7C4A0, asm, epirawwrite]
      - [0x7C630, asm, epirawread]
      - [0x7C7D0, asm, setglobalintmask]
      - [0x7C820, asm, yieldthread]
      - [0x7C870, asm, ldiv]
      - [0x7CA00, rodata]
      - [0x7CAD0, rodata]





  - name: data.lzma #testing
    type: bin
    start: 0x7CC30
  - [0x800000]
